<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.flowable.task.service.impl.persistence.entity.HistoricTaskInstanceEntityImpl">

    <select id="selectWfHistoricTaskInstancesByQueryCriteria" parameterType="org.springblade.plugin.workflow.core.query.WfHistoricTaskInstanceQuery" resultMap="historicTaskInstanceResultMap">
        <if test="firstResult != null and firstResult &gt;= 0">${limitBefore}</if>
        select distinct RES.* <if test="firstResult != null and firstResult &gt;= 0">${limitBetween}</if> <if test="nullHandlingColumn != null">, ${nullHandlingColumn}</if>
        <include refid="selectWfHistoricTaskInstancesByQueryCriteriaSql"/>
        ${orderBy}
        <if test="firstResult != null and firstResult &gt;= 0">${limitAfter}</if>
    </select>

    <select id="selectWfHistoricTaskInstanceCountByQueryCriteria" parameterType="org.springblade.plugin.workflow.core.query.WfHistoricTaskInstanceQuery" resultType="long">
        select count(distinct RES.ID_)
        <include refid="selectWfHistoricTaskInstancesByQueryCriteriaSql"/>
    </select>

    <sql id="selectWfHistoricTaskInstancesByQueryCriteriaSql">
        from ${prefix}ACT_HI_TASKINST RES
        <include refid="commonselectWfHistoricTaskInstancesByQueryCriteriaSql"/>
    </sql>

    <sql id="commonselectWfHistoricTaskInstancesByQueryCriteriaSql">
        <if test="processFinished || processUnfinished || processInstanceBusinessKey != null || processInstanceBusinessKeyLike != null || processInstanceBusinessKeyLikeIgnoreCase != null">
            inner join ${prefix}ACT_HI_PROCINST HPI ON RES.PROC_INST_ID_ = HPI.ID_
        </if>
        <if test="processDefinitionKey != null || processDefinitionKeyLike != null || processDefinitionKeyLikeIgnoreCase != null || processDefinitionName != null || processDefinitionNameLike != null || (processCategoryInList != null &amp;&amp; processCategoryInList.size() &gt; 0) || (processCategoryNotInList != null &amp;&amp; processCategoryNotInList.size() &gt; 0) || (processDefinitionKeys != null &amp;&amp; processDefinitionKeys.size() &gt; 0)">
            inner join ${prefix}ACT_RE_PROCDEF D on RES.PROC_DEF_ID_ = D.ID_
        </if>
        <if test="deploymentId != null || (deploymentIds != null &amp;&amp; deploymentIds.size() &gt; 0)">
            left outer join ${prefix}ACT_RE_PROCDEF DEPLOY_P ON RES.PROC_DEF_ID_ = DEPLOY_P.ID_
        </if>
        <if test="cmmnDeploymentId != null || (cmmnDeploymentIds != null &amp;&amp; cmmnDeploymentIds.size() &gt; 0)">
            left outer join ${prefix}ACT_CMMN_CASEDEF DEPLOY_C ON RES.SCOPE_DEFINITION_ID_ = DEPLOY_C.ID_
        </if>
        <if test="caseDefinitionKey != null || caseDefinitionKeyLike != null ||  caseDefinitionKeyLikeIgnoreCase != null || (caseDefinitionKeys != null &amp;&amp; caseDefinitionKeys.size() &gt; 0)">
            inner join ${prefix}ACT_CMMN_CASEDEF CD on RES.SCOPE_DEFINITION_ID_ = CD.ID_
        </if>
        <if test="active">
            left outer join ${prefix}ACT_RU_TASK RUT ON RES.ID_ = RUT.ID_
        </if>
        <foreach collection="queryVariableValues" index="index" item="var">
            <if test="!var.operator.equals('EXISTS') &amp;&amp; !var.operator.equals('NOT_EXISTS')">
                <choose>
                    <when test="var.local">
                        inner join ${prefix}ACT_HI_VARINST A${index} on RES.ID_ = A${index}.TASK_ID_
                    </when>
                    <otherwise>
                        inner join ${prefix}ACT_HI_VARINST A${index} on RES.PROC_INST_ID_ = A${index}.PROC_INST_ID_
                    </otherwise>
                </choose>
            </if>
        </foreach>
        <foreach collection="orQueryObjects" index="orIndex" item="orQueryObject">
            <if test="orQueryObject.processFinished || orQueryObject.processUnfinished || orQueryObject.processInstanceBusinessKey != null || orQueryObject.processInstanceBusinessKeyLike != null || orQueryObject.processInstanceBusinessKeyLikeIgnoreCase != null">
                inner join ${prefix}ACT_HI_PROCINST HPI_OR${orIndex} ON RES.PROC_INST_ID_ = HPI_OR${orIndex}.ID_
            </if>
            <if test="orQueryObject.processDefinitionKey != null || orQueryObject.processDefinitionKeyLike != null || orQueryObject.processDefinitionKeyLikeIgnoreCase != null || orQueryObject.processDefinitionName != null || orQueryObject.processDefinitionNameLike != null || (orQueryObject.processCategoryInList != null &amp;&amp; orQueryObject.processCategoryInList.size() &gt; 0) || (orQueryObject.processCategoryNotInList != null &amp;&amp; orQueryObject.processCategoryNotInList.size() &gt; 0) || (orQueryObject.processDefinitionKeys != null &amp;&amp; orQueryObject.processDefinitionKeys.size() &gt; 0)">
                left outer join ${prefix}ACT_RE_PROCDEF D_OR${orIndex} on RES.PROC_DEF_ID_ = D_OR${orIndex}.ID_
            </if>
            <if test="orQueryObject.deploymentId != null || (orQueryObject.deploymentIds != null &amp;&amp; orQueryObject.deploymentIds.size() &gt; 0)">
                left outer join ${prefix}ACT_RE_PROCDEF DEPLOY_P_OR${orIndex} ON RES.PROC_DEF_ID_ = DEPLOY_P_OR${orIndex}.ID_
            </if>
            <if test="orQueryObject.cmmnDeploymentId != null || (orQueryObject.cmmnDeploymentIds != null &amp;&amp; orQueryObject.cmmnDeploymentIds.size() &gt; 0)">
                left outer join ${prefix}ACT_CMMN_CASEDEF DEPLOY_C_OR${orIndex} ON RES.SCOPE_DEFINITION_ID_ = DEPLOY_C_OR${orIndex}.ID_
            </if>
            <if test="orQueryObject.caseDefinitionKey != null || orQueryObject.caseDefinitionKeyLike != null || orQueryObject.caseDefinitionKeyLikeIgnoreCase != null || (orQueryObject.caseDefinitionKeys != null &amp;&amp; orQueryObject.caseDefinitionKeys.size() &gt; 0)">
                left outer join ${prefix}ACT_CMMN_CASEDEF CD_OR${orIndex} on RES.SCOPE_DEFINITION_ID_ = CD_OR${orIndex}.ID_
            </if>
            <if test="orQueryObject.queryVariableValues.size() &gt; 0">
                <if test="orQueryObject.hasValueComparisonQueryVariables()">
                    <if test="orQueryObject.hasLocalQueryVariableValue()">
                        left outer join ${prefix}ACT_HI_VARINST A_L_OR${orIndex} on RES.ID_ = A_L_OR${orIndex}.TASK_ID_
                    </if>
                    <if test="orQueryObject.hasNonLocalQueryVariableValue()">
                        left outer join ${prefix}ACT_HI_VARINST A_OR${orIndex} on RES.PROC_INST_ID_ = A_OR${orIndex}.PROC_INST_ID_
                    </if>
                </if>
            </if>
        </foreach>
        <where>
            <include refid="commonWfTaskInstanceQuerySql">
                <property name="queryTablePrefix" value="RES."/>
            </include>
            <if test="active">
                and RUT.SUSPENSION_STATE_ = 1
            </if>
            <if test="processDefinitionKey != null">
                and D.KEY_ = #{processDefinitionKey}
            </if>
            <if test="processDefinitionKeyLike != null">
                and D.KEY_ like #{processDefinitionKeyLike}${wildcardEscapeClause}
            </if>
            <if test="processDefinitionKeyLikeIgnoreCase != null">
                and lower(D.KEY_) like #{processDefinitionKeyLikeIgnoreCase}${wildcardEscapeClause}
            </if>
            <if test="processDefinitionKeys != null &amp;&amp; processDefinitionKeys.size() &gt; 0">
                and D.KEY_ in
                <foreach item="item" index="index" collection="processDefinitionKeys" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="processDefinitionName != null">
                and D.NAME_ = #{processDefinitionName}
            </if>
            <if test="processDefinitionNameLike != null">
                and D.NAME_ like #{processDefinitionNameLike}${wildcardEscapeClause}
            </if>
            <if test="processCategoryInList != null &amp;&amp; processCategoryInList.size() &gt; 0">
                and D.CATEGORY_ IN
                <foreach item="processCategory" index="index" collection="processCategoryInList"
                         open="(" separator="," close=")">
                    #{processCategory}
                </foreach>
            </if>
            <if test="processCategoryNotInList != null &amp;&amp; processCategoryNotInList.size() &gt; 0">
                and D.CATEGORY_ NOT IN
                <foreach item="processCategory" index="index" collection="processCategoryNotInList"
                         open="(" separator="," close=")">
                    #{processCategory}
                </foreach>
            </if>
            <if test="deploymentId != null &amp;&amp; cmmnDeploymentId == null">
                and DEPLOY_P.DEPLOYMENT_ID_ = #{deploymentId}
            </if>
            <if test="deploymentIds != null &amp;&amp; deploymentIds.size() &gt; 0 &amp;&amp; cmmnDeploymentIds == null">
                and DEPLOY_P.DEPLOYMENT_ID_ IN
                <foreach item="deployment" index="index" collection="deploymentIds"
                         open="(" separator="," close=")">
                    #{deployment}
                </foreach>
            </if>
            <if test="cmmnDeploymentId != null &amp;&amp; deploymentId == null">
                and DEPLOY_C.DEPLOYMENT_ID_ = #{cmmnDeploymentId}
            </if>
            <if test="cmmnDeploymentIds != null &amp;&amp; cmmnDeploymentIds.size() &gt; 0 &amp;&amp; deploymentIds == null">
                and DEPLOY_C.DEPLOYMENT_ID_ IN
                <foreach item="deployment" index="index" collection="cmmnDeploymentIds"
                         open="(" separator="," close=")">
                    #{deployment}
                </foreach>
            </if>
            <if test="deploymentId != null &amp;&amp; cmmnDeploymentId != null">
                and (DEPLOY_P.DEPLOYMENT_ID_ = #{deploymentId} or DEPLOY_C.DEPLOYMENT_ID = #{cmmnDeploymentId})
            </if>
            <if test="cmmnDeploymentIds != null &amp;&amp; cmmnDeploymentIds.size() &gt; 0 &amp;&amp; deploymentIds != null &amp;&amp; deploymentIds.size() &gt; 0">
                and (
                DEPLOY_P.DEPLOYMENT_ID_ IN
                <foreach item="deployment" index="index" collection="deploymentIds" open="(" separator="," close=")">
                    #{deployment}
                </foreach>
                or
                DEPLOY_C.DEPLOYMENT_ID_ IN
                <foreach item="cmmnDeployment" index="index" collection="cmmnDeploymentIds" open="(" separator="," close=")">
                    #{cmmnDeployment}
                </foreach>
                )
            </if>
            <if test="caseDefinitionKey != null">
                and CD.KEY_ = #{caseDefinitionKey}
            </if>
            <if test="caseDefinitionKeyLike != null">
                and CD.KEY_ like #{caseDefinitionKeyLike}${wildcardEscapeClause}
            </if>
            <if test="caseDefinitionKeyLikeIgnoreCase != null">
                and lower(CD.KEY_) like #{caseDefinitionKeyLikeIgnoreCase}${wildcardEscapeClause}
            </if>
            <if test="caseDefinitionKeys != null &amp;&amp; caseDefinitionKeys.size() &gt; 0">
                and CD.KEY_ in
                <foreach item="item" index="index" collection="caseDefinitionKeys" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="processFinished">
                and HPI.END_TIME_ is not null
            </if>
            <if test="processUnfinished">
                and HPI.END_TIME_ is null
            </if>
            <if test="processInstanceBusinessKey != null">
                and HPI.BUSINESS_KEY_ = #{processInstanceBusinessKey}
            </if>
            <if test="processInstanceBusinessKeyLike != null">
                and HPI.BUSINESS_KEY_ like #{processInstanceBusinessKeyLike}${wildcardEscapeClause}
            </if>
            <if test="processInstanceBusinessKeyLikeIgnoreCase != null">
                and lower(HPI.BUSINESS_KEY_) like #{processInstanceBusinessKeyLikeIgnoreCase}${wildcardEscapeClause}
            </if>
            <foreach item="queryVar" collection="queryVariableValues" index="index">
                <choose>
                    <when test="queryVar.operator.equals('EXISTS')">
                        and EXISTS (
                        select ID_ from ${prefix}ACT_HI_VARINST where NAME_ = #{queryVar.name}
                        <if test="!queryVar.local">
                            and RES.PROC_INST_ID_ = PROC_INST_ID_ and TASK_ID_ is null
                        </if>
                        <if test="queryVar.local">
                            and RES.ID_ = TASK_ID_
                        </if>
                        )
                    </when>
                    <when test="queryVar.operator.equals('NOT_EXISTS')">
                        and NOT EXISTS (
                        select ID_ from ${prefix}ACT_HI_VARINST where NAME_ = #{queryVar.name}
                        <if test="!queryVar.local">
                            and RES.PROC_INST_ID_ = PROC_INST_ID_ and TASK_ID_ is null
                        </if>
                        <if test="queryVar.local">
                            and RES.ID_ = TASK_ID_
                        </if>
                        )
                    </when>
                    <otherwise>
                        <if test="!queryVar.local">
                            <!-- When process instance variable is queried for, taskId should be null -->
                            and A${index}.TASK_ID_ is null
                        </if>
                        <if test="queryVar.name != null">
                            <!-- Match-all variable-names when name is null -->
                            and A${index}.NAME_= #{queryVar.name}
                        </if>
                        <if test="queryVar.needsTypeCheck()">
                            and A${index}.VAR_TYPE_ = #{queryVar.type}
                        </if>
                        <!-- Variable value -->
                        <if test="queryVar.textValue != null &amp;&amp; queryVar.longValue == null &amp;&amp; queryVar.doubleValue == null">
                            <choose>
                                <when test="queryVar.operator.equals('EQUALS_IGNORE_CASE') || queryVar.operator.equals('NOT_EQUALS_IGNORE_CASE') || queryVar.operator.equals('LIKE_IGNORE_CASE')">
                                    and (lower(A${index}.TEXT_)
                                </when>
                                <otherwise>
                                    and (A${index}.TEXT_
                                </otherwise>
                            </choose>
                            <choose>
                                <when test="queryVar.operator.equals('LIKE') || queryVar.operator.equals('LIKE_IGNORE_CASE')">LIKE</when>
                                <otherwise><include refid="executionVariableOperator" /></otherwise>
                            </choose>
                            #{queryVar.textValue}
                            <choose>
                                <when test="queryVar.operator.equals('LIKE') || queryVar.operator.equals('LIKE_IGNORE_CASE')">${wildcardEscapeClause}</when>
                            </choose>
                            <if test="queryVar.operator.equals('NOT_EQUALS') || queryVar.operator.equals('NOT_EQUALS_IGNORE_CASE')">
                                or A${index}.TEXT_ is null
                            </if>
                            )
                        </if>
                        <if test="queryVar.textValue2 != null">
                            and A${index}.TEXT2_
                            <choose>
                                <when test="queryVar.operator.equals('LIKE')">LIKE</when>
                                <otherwise><include refid="executionVariableOperator" /></otherwise>
                            </choose>
                            #{queryVar.textValue2}
                            <choose>
                                <when test="queryVar.operator.equals('LIKE')">${wildcardEscapeClause}</when>
                            </choose>
                        </if>
                        <if test="queryVar.longValue != null">
                            and (A${index}.LONG_
                            <include refid="executionVariableOperator" />
                            #{queryVar.longValue}
                            <if test="queryVar.operator.equals('NOT_EQUALS') || queryVar.operator.equals('NOT_EQUALS_IGNORE_CASE')">
                                or A${index}.LONG_ is null
                            </if>
                            )
                        </if>
                        <if test="queryVar.doubleValue != null">
                            and (A${index}.DOUBLE_
                            <include refid="executionVariableOperator" />
                            #{queryVar.doubleValue}
                            <if test="queryVar.operator.equals('NOT_EQUALS') || queryVar.operator.equals('NOT_EQUALS_IGNORE_CASE')">
                                or A${index}.DOUBLE_ is null
                            </if>
                            )
                        </if>
                        <!-- Null variable type -->
                        <if test="queryVar.textValue == null &amp;&amp; queryVar.textValue2 == null &amp;&amp; queryVar.longValue == null &amp;&amp; queryVar.doubleValue == null">
                            <choose>
                                <when test="queryVar.operator.equals('NOT_EQUALS')">
                                    and (A${index}.TEXT_ is not null or A${index}.TEXT2_ is not null or A${index}.LONG_ is not null or A${index}.DOUBLE_ is not null or A${index}.BYTEARRAY_ID_ is not null)
                                </when>
                                <otherwise>
                                    and A${index}.TEXT_ is null and A${index}.TEXT2_ is null and A${index}.LONG_ is null and A${index}.DOUBLE_ is null and A${index}.BYTEARRAY_ID_ is null
                                </otherwise>
                            </choose>
                        </if>
                    </otherwise>
                </choose>
            </foreach>
            <foreach item="orQueryObject" index="orIndex" collection="orQueryObjects">
                and
                <trim prefix="(" prefixOverrides="OR" suffix=")">
                    <include refid="commonWfTaskInstanceOrQuerySql">
                        <property name="queryTablePrefix" value="RES."/>
                    </include>
                    <if test="orQueryObject.processDefinitionKey != null">
                        or D_OR${orIndex}.KEY_ = #{orQueryObject.processDefinitionKey}
                    </if>
                    <if test="orQueryObject.processDefinitionKeyLike != null">
                        or D_OR${orIndex}.KEY_ like #{orQueryObject.processDefinitionKeyLike}${wildcardEscapeClause}
                    </if>
                    <if test="orQueryObject.processDefinitionKeyLikeIgnoreCase != null">
                        or lower(D_OR${orIndex}.KEY_) like #{orQueryObject.processDefinitionKeyLikeIgnoreCase}${wildcardEscapeClause}
                    </if>
                    <if test="orQueryObject.processDefinitionKeys != null &amp;&amp; orQueryObject.processDefinitionKeys.size() &gt; 0">
                        or D_OR${orIndex}.KEY_ in
                        <foreach item="item" index="index" collection="orQueryObject.processDefinitionKeys" open="(" separator="," close=")">
                            #{item}
                        </foreach>
                    </if>
                    <if test="orQueryObject.processDefinitionName != null">
                        or D_OR${orIndex}.NAME_ = #{orQueryObject.processDefinitionName}
                    </if>
                    <if test="orQueryObject.processDefinitionNameLike != null">
                        or D_OR${orIndex}.NAME_ like #{orQueryObject.processDefinitionNameLike}${wildcardEscapeClause}
                    </if>
                    <if test="orQueryObject.processCategoryInList != null &amp;&amp; orQueryObject.processCategoryInList.size() &gt; 0">
                        or D_OR${orIndex}.CATEGORY_ IN
                        <foreach item="processCategory" index="index" collection="orQueryObject.processCategoryInList"
                                 open="(" separator="," close=")">
                            #{processCategory}
                        </foreach>
                    </if>
                    <if test="orQueryObject.processCategoryNotInList != null &amp;&amp; orQueryObject.processCategoryNotInList.size() &gt; 0">
                        or D_OR${orIndex}.CATEGORY_ NOT IN
                        <foreach item="processCategory" index="index" collection="orQueryObject.processCategoryNotInList"
                                 open="(" separator="," close=")">
                            #{processCategory}
                        </foreach>
                    </if>
                    <if test="orQueryObject.deploymentId != null">
                        or DEPLOY_P_OR${orIndex}.DEPLOYMENT_ID_ = #{orQueryObject.deploymentId}
                    </if>
                    <if test="orQueryObject.deploymentIds != null &amp;&amp; orQueryObject.deploymentIds.size() &gt; 0">
                        or DEPLOY_P_OR${orIndex}.DEPLOYMENT_ID_ IN
                        <foreach item="deployment" index="index" collection="orQueryObject.deploymentIds"
                                 open="(" separator="," close=")">
                            #{deployment}
                        </foreach>
                    </if>
                    <if test="orQueryObject.cmmnDeploymentId != null">
                        or DEPLOY_C_OR${orIndex}.DEPLOYMENT_ID_ = #{orQueryObject.cmmnDeploymentId}
                    </if>
                    <if test="orQueryObject.cmmnDeploymentIds != null &amp;&amp; orQueryObject.cmmnDeploymentIds.size() &gt; 0">
                        or DEPLOY_C_OR${orIndex}.DEPLOYMENT_ID_ IN
                        <foreach item="deployment" index="index" collection="orQueryObject.cmmnDeploymentIds"
                                 open="(" separator="," close=")">
                            #{deployment}
                        </foreach>
                    </if>
                    <if test="orQueryObject.caseDefinitionKey != null">
                        or CD_OR${orIndex}.KEY_ = #{orQueryObject.caseDefinitionKey}
                    </if>
                    <if test="orQueryObject.caseDefinitionKeyLike != null">
                        or CD_OR${orIndex}.KEY_ like #{orQueryObject.caseDefinitionKeyLike}${wildcardEscapeClause}
                    </if>
                    <if test="orQueryObject.caseDefinitionKeyLikeIgnoreCase != null">
                        or lower(CD_OR${orIndex}.KEY_) like #{orQueryObject.caseDefinitionKeyLikeIgnoreCase}${wildcardEscapeClause}
                    </if>
                    <if test="orQueryObject.caseDefinitionKeys != null &amp;&amp; orQueryObject.caseDefinitionKeys.size() &gt; 0">
                        or CD_OR${orIndex}.KEY_ in
                        <foreach item="item" index="index" collection="orQueryObject.caseDefinitionKeys" open="(" separator="," close=")">
                            #{item}
                        </foreach>
                    </if>
                    <if test="orQueryObject.processInstanceBusinessKey != null">
                        or HPI_OR${orIndex}.BUSINESS_KEY_ = #{orQueryObject.processInstanceBusinessKey}
                    </if>
                    <if test="orQueryObject.processInstanceBusinessKeyLike != null">
                        or HPI_OR${orIndex}.BUSINESS_KEY_ like #{orQueryObject.processInstanceBusinessKeyLike}${wildcardEscapeClause}
                    </if>
                    <if test="orQueryObject.processInstanceBusinessKeyLikeIgnoreCase != null">
                        or lower(HPI_OR${orIndex}.BUSINESS_KEY_) like #{orQueryObject.processInstanceBusinessKeyLikeIgnoreCase}${wildcardEscapeClause}
                    </if>
                    <if test="orQueryObject.processFinished">
                        or HPI_OR${orIndex}.END_TIME_ is not null
                    </if>
                    <if test="orQueryObject.processUnfinished">
                        or HPI_OR${orIndex}.END_TIME_ is null
                    </if>
                    <foreach item="queryVar" collection="orQueryObject.queryVariableValues" index="index">
                        or
                        <trim prefix="(" prefixOverrides="AND" suffix=")">
                            <choose>
                                <when test="queryVar.operator.equals('EXISTS')">
                                    and EXISTS (
                                    select ID_ from ${prefix}ACT_HI_VARINST where NAME_ = #{queryVar.name}
                                    <if test="!queryVar.local">
                                        and RES.PROC_INST_ID_ = PROC_INST_ID_ and TASK_ID_ is null
                                    </if>
                                    <if test="queryVar.local">
                                        and RES.ID_ = TASK_ID_
                                    </if>
                                    )
                                </when>
                                <when test="queryVar.operator.equals('NOT_EXISTS')">
                                    and NOT EXISTS (
                                    select ID_ from ${prefix}ACT_HI_VARINST where NAME_ = #{queryVar.name}
                                    <if test="!queryVar.local">
                                        and RES.PROC_INST_ID_ = PROC_INST_ID_ and TASK_ID_ is null
                                    </if>
                                    <if test="queryVar.local">
                                        and RES.ID_ = TASK_ID_
                                    </if>
                                    )
                                </when>
                                <otherwise>
                                    <choose>
                                        <when test="!queryVar.local">
                                            <bind name="orLocal" value="''" />
                                            <!-- When process instance variable is queried for, taskId should be null -->
                                            and A_OR${orIndex}.TASK_ID_ is null
                                        </when>
                                        <otherwise>
                                            <bind name="orLocal" value="'L_'" />
                                        </otherwise>
                                    </choose>
                                    <if test="queryVar.name != null">
                                        <!-- Match-all variable-names when name is null -->
                                        and A_${orLocal}OR${orIndex}.NAME_= #{queryVar.name}
                                    </if>
                                    <if test="queryVar.needsTypeCheck()">
                                        and A_${orLocal}OR${orIndex}.VAR_TYPE_ = #{queryVar.type}
                                    </if>
                                    <!-- Variable value -->
                                    <if test="queryVar.textValue != null &amp;&amp; queryVar.longValue == null &amp;&amp; queryVar.doubleValue == null">
                                        <choose>
                                            <when test="queryVar.operator.equals('EQUALS_IGNORE_CASE') || queryVar.operator.equals('NOT_EQUALS_IGNORE_CASE') || queryVar.operator.equals('LIKE_IGNORE_CASE')">
                                                and (lower(A_${orLocal}OR${orIndex}.TEXT_)
                                            </when>
                                            <otherwise>
                                                and (A_${orLocal}OR${orIndex}.TEXT_
                                            </otherwise>
                                        </choose>
                                        <choose>
                                            <when test="queryVar.operator.equals('LIKE') || queryVar.operator.equals('LIKE_IGNORE_CASE')">LIKE</when>
                                            <otherwise><include refid="executionVariableOperator" /></otherwise>
                                        </choose>
                                        #{queryVar.textValue}
                                        <choose>
                                            <when test="queryVar.operator.equals('LIKE') || queryVar.operator.equals('LIKE_IGNORE_CASE')">${wildcardEscapeClause}</when>
                                        </choose>
                                        <if test="queryVar.operator.equals('NOT_EQUALS') || queryVar.operator.equals('NOT_EQUALS_IGNORE_CASE')">
                                            or A_${orLocal}OR${orIndex}.TEXT_ is null
                                        </if>
                                        )
                                    </if>
                                    <if test="queryVar.textValue2 != null">
                                        and A_${orLocal}OR${orIndex}.TEXT2_
                                        <choose>
                                            <when test="queryVar.operator.equals('LIKE')">LIKE</when>
                                            <otherwise><include refid="executionVariableOperator" /></otherwise>
                                        </choose>
                                        #{queryVar.textValue2}
                                        <choose>
                                            <when test="queryVar.operator.equals('LIKE')">${wildcardEscapeClause}</when>
                                        </choose>
                                    </if>
                                    <if test="queryVar.longValue != null">
                                        and (A_${orLocal}OR${orIndex}.LONG_
                                        <include refid="executionVariableOperator" />
                                        #{queryVar.longValue}
                                        <if test="queryVar.operator.equals('NOT_EQUALS') || queryVar.operator.equals('NOT_EQUALS_IGNORE_CASE')">
                                            or A_${orLocal}OR${orIndex}.LONG_ is null
                                        </if>
                                        )
                                    </if>
                                    <if test="queryVar.doubleValue != null">
                                        and (A_OR${orIndex}_${index}.DOUBLE_
                                        <include refid="executionVariableOperator" />
                                        #{queryVar.doubleValue}
                                        <if test="queryVar.operator.equals('NOT_EQUALS') || queryVar.operator.equals('NOT_EQUALS_IGNORE_CASE')">
                                            or A_${orLocal}OR${orIndex}.DOUBLE_ is null
                                        </if>
                                        )
                                    </if>
                                    <!-- Null variable type -->
                                    <if test="queryVar.textValue == null &amp;&amp; queryVar.textValue2 == null &amp;&amp; queryVar.longValue == null &amp;&amp; queryVar.doubleValue == null">
                                        <choose>
                                            <when test="queryVar.operator.equals('NOT_EQUALS')">
                                                and (A_${orLocal}OR${orIndex}.TEXT_ is not null or A_${orLocal}OR${orIndex}.TEXT2_ is not null or A_${orLocal}OR${orIndex}.LONG_ is not null or A_${orLocal}OR${orIndex}.DOUBLE_ is not null or A_${orLocal}OR${orIndex}.BYTEARRAY_ID_ is not null)
                                            </when>
                                            <otherwise>
                                                and A_${orLocal}OR${orIndex}.TEXT_ is null and A_${orLocal}OR${orIndex}.TEXT2_ is null and A_${orLocal}OR${orIndex}.LONG_ is null and A_${orLocal}OR${orIndex}.DOUBLE_ is null and A_${orLocal}OR${orIndex}.BYTEARRAY_ID_ is null
                                            </otherwise>
                                        </choose>
                                    </if>
                                </otherwise>
                            </choose>
                        </trim>
                    </foreach>
                </trim>
            </foreach>
        </where>
    </sql>

    <sql id="commonWfTaskInstanceQuerySql">
        <if test="taskId != null">
            ${queryTablePrefix}ID_ = #{taskId}
        </if>
        <if test="taskDefinitionId != null">
            and ${queryTablePrefix}TASK_DEF_ID_ = #{taskDefinitionId}
        </if>
        <if test="processDefinitionId != null">
            and ${queryTablePrefix}PROC_DEF_ID_ = #{processDefinitionId}
        </if>
        <if test="processInstanceId != null">
            and ${queryTablePrefix}PROC_INST_ID_ = #{processInstanceId}
        </if>
        <if test="processInstanceIds != null &amp;&amp; processInstanceIds.size() &gt; 0">
            and ${queryTablePrefix}PROC_INST_ID_ IN
            <foreach item="processInstance" index="index" collection="processInstanceIds"
                     open="(" separator="," close=")">
                #{processInstance}
            </foreach>
        </if>
        <if test="taskDefinitionKey != null">
            and ${queryTablePrefix}TASK_DEF_KEY_ = #{taskDefinitionKey}
        </if>
        <if test="taskDefinitionKeyLike != null">
            and ${queryTablePrefix}TASK_DEF_KEY_ like #{taskDefinitionKeyLike}${wildcardEscapeClause}
        </if>
        <if test="taskDefinitionKeys != null and !taskDefinitionKeys.isEmpty()">
            and ${queryTablePrefix}TASK_DEF_KEY_ in
            <foreach item="item" index="index" collection="taskDefinitionKeys" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="executionId != null">
            and ${queryTablePrefix}EXECUTION_ID_ = #{executionId}
        </if>
        <if test="scopeId != null">
            and ${queryTablePrefix}SCOPE_ID_ = #{scopeId}
        </if>
        <if test="subScopeId != null">
            and ${queryTablePrefix}SUB_SCOPE_ID_ = #{subScopeId}
        </if>
        <if test="scopeType != null">
            and ${queryTablePrefix}SCOPE_TYPE_ = #{scopeType}
        </if>
        <if test="scopeDefinitionId != null">
            and ${queryTablePrefix}SCOPE_DEFINITION_ID_ = #{scopeDefinitionId}
        </if>
        <if test="propagatedStageInstanceId != null">
            and ${queryTablePrefix}PROPAGATED_STAGE_INST_ID_ = #{propagatedStageInstanceId}
        </if>
        <if test="processInstanceIdWithChildren != null">
            and exists(select ELINK.ID_ from ${prefix}ACT_HI_ENTITYLINK ELINK where ELINK.LINK_TYPE_ = 'child' and
            ELINK.SCOPE_ID_ = #{processInstanceIdWithChildren} AND ELINK.SCOPE_TYPE_ = 'bpmn' and
            ELINK.REF_SCOPE_ID_ = ${queryTablePrefix}ID_ and ELINK.REF_SCOPE_TYPE_ = 'task')
        </if>
        <if test="caseInstanceIdWithChildren != null">
            and exists(select ELINK.ID_ from ${prefix}ACT_HI_ENTITYLINK ELINK where ELINK.LINK_TYPE_ = 'child' and
            ELINK.SCOPE_ID_ = #{caseInstanceIdWithChildren} AND ELINK.SCOPE_TYPE_ = 'cmmn' and
            ELINK.REF_SCOPE_ID_ = ${queryTablePrefix}ID_ and ELINK.REF_SCOPE_TYPE_ = 'task')
        </if>
        <if test="taskName != null">
            and ${queryTablePrefix}NAME_ = #{taskName}
        </if>
        <if test="taskNameLike != null">
            and ${queryTablePrefix}NAME_ like #{taskNameLike}${wildcardEscapeClause}
        </if>
        <if test="taskNameLikeIgnoreCase != null">
            and lower(${queryTablePrefix}NAME_) like #{taskNameLikeIgnoreCase}${wildcardEscapeClause}
        </if>
        <if test="taskNameList != null &amp;&amp; taskNameList.size() &gt; 0">
            and ${queryTablePrefix}NAME_ IN
            <foreach item="taskName" index="index" collection="taskNameList"
                     open="(" separator="," close=")">
                #{taskName}
            </foreach>
        </if>
        <if test="taskNameListIgnoreCase != null &amp;&amp; taskNameListIgnoreCase.size() &gt; 0">
            and lower(${queryTablePrefix}NAME_) IN
            <foreach item="taskName" index="index" collection="taskNameListIgnoreCase"
                     open="(" separator="," close=")">
                #{taskName}
            </foreach>
        </if>
        <if test="taskParentTaskId != null">
            and ${queryTablePrefix}PARENT_TASK_ID_ = #{taskParentTaskId}
        </if>
        <if test="taskDescription != null">
            and ${queryTablePrefix}DESCRIPTION_ = #{taskDescription}
        </if>
        <if test="taskDescriptionLike != null">
            and ${queryTablePrefix}DESCRIPTION_ like #{taskDescriptionLike}${wildcardEscapeClause}
        </if>
<!--        <if test="taskDescriptionLikeIgnoreCase != null">-->
<!--            and lower(${queryTablePrefix}DESCRIPTION_) like #{taskDescriptionLikeIgnoreCase}${wildcardEscapeClause}-->
<!--        </if>-->
        <if test="taskDeleteReason != null">
            and ${queryTablePrefix}DELETE_REASON_ = #{taskDeleteReason}
        </if>
        <if test="taskDeleteReasonLike != null">
            and ${queryTablePrefix}DELETE_REASON_ like #{taskDeleteReasonLike}${wildcardEscapeClause}
        </if>
        <if test="taskOwner != null">
            and ${queryTablePrefix}OWNER_ = #{taskOwner}
        </if>
        <if test="taskOwnerLike != null">
            and ${queryTablePrefix}OWNER_ like #{taskOwnerLike}${wildcardEscapeClause}
        </if>
        <if test="taskOwnerLikeIgnoreCase != null">
            and lower(${queryTablePrefix}OWNER_) like #{taskOwnerLikeIgnoreCase}${wildcardEscapeClause}
        </if>
        <if test="taskAssignee != null">
            and ${queryTablePrefix}ASSIGNEE_ = #{taskAssignee}
        </if>
        <if test="taskAssigneeLike != null">
            and ${queryTablePrefix}ASSIGNEE_ like #{taskAssigneeLike}${wildcardEscapeClause}
        </if>
        <if test="taskAssigneeLikeIgnoreCase != null">
            and lower(${queryTablePrefix}ASSIGNEE_) like #{taskAssigneeLikeIgnoreCase}${wildcardEscapeClause}
        </if>
        <if test="taskAssigneeIds != null &amp;&amp; taskAssigneeIds.size() &gt; 0">
            and ${queryTablePrefix}ASSIGNEE_ IN
            <foreach item="assigneeId" index="index" collection="taskAssigneeIds"
                     open="(" separator="," close=")">
                #{assigneeId}
            </foreach>
        </if>
        <if test="taskPriority != null">
            and ${queryTablePrefix}PRIORITY_ = #{taskPriority}
        </if>
        <if test="taskMinPriority != null">
            and ${queryTablePrefix}PRIORITY_ &gt;= #{taskMinPriority}
        </if>
        <if test="taskMaxPriority != null">
            and ${queryTablePrefix}PRIORITY_ &lt;= #{taskMaxPriority}
        </if>
        <if test="unfinished">
            and ${queryTablePrefix}END_TIME_ is null
        </if>
        <if test="finished">
            and ${queryTablePrefix}END_TIME_ is not null
        </if>

        <if test="dueDate != null">
            and ${queryTablePrefix}DUE_DATE_ = #{dueDate}
        </if>
        <if test="dueBefore != null">
            and ${queryTablePrefix}DUE_DATE_ &lt; #{dueBefore}
        </if>
        <if test="dueAfter != null">
            and ${queryTablePrefix}DUE_DATE_ &gt; #{dueAfter}
        </if>
        <if test="withoutDueDate">
            and ${queryTablePrefix}DUE_DATE_ is null
        </if>
        <if test="creationDate != null">
            and ${queryTablePrefix}START_TIME_ = #{creationDate}
        </if>
        <if test="creationBeforeDate != null">
            and ${queryTablePrefix}START_TIME_ &lt; #{creationBeforeDate}
        </if>
        <if test="creationAfterDate != null">
            and ${queryTablePrefix}START_TIME_ &gt; #{creationAfterDate}
        </if>
        <if test="completedDate != null">
            and ${queryTablePrefix}END_TIME_ = #{completedDate}
        </if>
        <if test="completedBeforeDate != null">
            and ${queryTablePrefix}END_TIME_ &lt; #{completedBeforeDate}
        </if>
        <if test="completedAfterDate != null">
            and ${queryTablePrefix}END_TIME_ &gt; #{completedAfterDate}
        </if>
        <if test="category != null">
            and ${queryTablePrefix}CATEGORY_ = #{category}
        </if>
        <if test="withFormKey">
            and ${queryTablePrefix}FORM_KEY_ IS NOT NULL
        </if>
        <if test="formKey != null">
            and ${queryTablePrefix}FORM_KEY_ = #{formKey}
        </if>
        <if test="tenantId != null">
            and ${queryTablePrefix}TENANT_ID_ = #{tenantId}
        </if>
        <if test="tenantIdLike != null">
            and ${queryTablePrefix}TENANT_ID_ like #{tenantIdLike}${wildcardEscapeClause}
        </if>
        <if test="withoutTenantId">
            and (${queryTablePrefix}TENANT_ID_ = '' or ${queryTablePrefix}TENANT_ID_ is null)
        </if>
        <if test="withoutDeleteReason">
            and (${queryTablePrefix}DELETE_REASON_ = '' or ${queryTablePrefix}DELETE_REASON_ is null)
        </if>
        <if test="candidateUser != null || candidateGroups != null">
            <if test="!ignoreAssigneeValue">
                and ${queryTablePrefix}ASSIGNEE_ is null
            </if>
            and EXISTS(select LINK.ID_ from ${prefix}ACT_HI_IDENTITYLINK LINK where LINK.TYPE_ = 'candidate' and LINK.TASK_ID_ = ${queryTablePrefix}ID_
            and
            (
            <if test="candidateUser != null">
                LINK.USER_ID_ = #{candidateUser}
            </if>
            <if test="candidateUser != null &amp;&amp; candidateGroups != null &amp;&amp; candidateGroups.size() &gt; 0">
                or
            </if>
            <if test="candidateGroups != null &amp;&amp; candidateGroups.size() &gt; 0">
                LINK.GROUP_ID_ IN
                <foreach item="group" index="index" collection="candidateGroups"
                         open="(" separator="," close=")">
                    #{group}
                </foreach>
            </if>
            )
            )
        </if>
        <if test="involvedUser != null">
            and (
            EXISTS(select LINK.ID_ from ${prefix}ACT_HI_IDENTITYLINK LINK where LINK.USER_ID_ = #{involvedUser} and LINK.TASK_ID_ = ${queryTablePrefix}ID_)
            or ${queryTablePrefix}ASSIGNEE_ = #{involvedUser}
            or ${queryTablePrefix}OWNER_ = #{involvedUser}
            )
        </if>
        <if test="involvedGroups != null">
            and EXISTS(select LINK.ID_ from ${prefix}ACT_HI_IDENTITYLINK LINK where LINK.TASK_ID_ = ${queryTablePrefix}ID_ and LINK.GROUP_ID_ in
            <foreach item="involvedGroup" index="index" collection="involvedGroups" open="(" separator="," close=")">
                #{involvedGroup}
            </foreach>
            )
        </if>
    </sql>

    <sql id="commonWfTaskInstanceOrQuerySql">
        <if test="orQueryObject.taskId != null">
            ${queryTablePrefix}ID_ = #{orQueryObject.taskId}
        </if>
        <if test="orQueryObject.taskDefinitionId != null">
            or ${queryTablePrefix}TASK_DEF_ID_ = #{orQueryObject.taskDefinitionId}
        </if>
        <if test="orQueryObject.processDefinitionId != null">
            or ${queryTablePrefix}PROC_DEF_ID_ = #{orQueryObject.processDefinitionId}
        </if>
        <if test="orQueryObject.processInstanceId != null">
            or ${queryTablePrefix}PROC_INST_ID_ = #{orQueryObject.processInstanceId}
        </if>
        <if test="orQueryObject.processInstanceIds != null &amp;&amp; orQueryObject.processInstanceIds.size() &gt; 0">
            or ${queryTablePrefix}PROC_INST_ID_ IN
            <foreach item="processInstance" index="index" collection="orQueryObject.processInstanceIds"
                     open="(" separator="," close=")">
                #{processInstance}
            </foreach>
        </if>
        <if test="orQueryObject.taskDefinitionKey != null">
            or ${queryTablePrefix}TASK_DEF_KEY_ = #{orQueryObject.taskDefinitionKey}
        </if>
        <if test="orQueryObject.taskDefinitionKeyLike != null">
            or ${queryTablePrefix}TASK_DEF_KEY_ like #{orQueryObject.taskDefinitionKeyLike}${wildcardEscapeClause}
        </if>
        <if test="orQueryObject.taskDefinitionKeys != null and !orQueryObject.taskDefinitionKeys.isEmpty()">
            or ${queryTablePrefix}TASK_DEF_KEY_ in
            <foreach item="item" index="index" collection="orQueryObject.taskDefinitionKeys" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="orQueryObject.executionId != null">
            or ${queryTablePrefix}EXECUTION_ID_ = #{orQueryObject.executionId}
        </if>
        <if test="orQueryObject.scopeId != null">
            or ${queryTablePrefix}SCOPE_ID_ = #{orQueryObject.scopeId}
        </if>
        <if test="orQueryObject.subScopeId != null">
            or ${queryTablePrefix}SUB_SCOPE_ID_ = #{orQueryObject.subScopeId}
        </if>
        <if test="orQueryObject.scopeType != null">
            or ${queryTablePrefix}SCOPE_TYPE_ = #{orQueryObject.scopeType}
        </if>
        <if test="orQueryObject.scopeDefinitionId != null">
            or ${queryTablePrefix}SCOPE_DEFINITION_ID_ = #{orQueryObject.scopeDefinitionId}
        </if>
        <if test="orQueryObject.propagatedStageInstanceId != null">
            or ${queryTablePrefix}PROPAGATED_STAGE_INST_ID_ = #{orQueryObject.propagatedStageInstanceId}
        </if>
        <if test="orQueryObject.processInstanceIdWithChildren != null">
            or exists(select ELINK.ID_ from ${prefix}ACT_HI_ENTITYLINK ELINK where ELINK.LINK_TYPE_ = 'child' and
            ELINK.SCOPE_ID_ = #{orQueryObject.processInstanceIdWithChildren} AND ELINK.SCOPE_TYPE_ = 'bpmn' and
            ELINK.REF_SCOPE_ID_ = ${queryTablePrefix}ID_ and ELINK.REF_SCOPE_TYPE_ = 'task')
        </if>
        <if test="orQueryObject.caseInstanceIdWithChildren != null">
            or exists(select ELINK.ID_ from ${prefix}ACT_HI_ENTITYLINK ELINK where ELINK.LINK_TYPE_ = 'child' and
            ELINK.SCOPE_ID_ = #{orQueryObject.caseInstanceIdWithChildren} AND ELINK.SCOPE_TYPE_ = 'cmmn' and
            ELINK.REF_SCOPE_ID_ = ${queryTablePrefix}ID_ and ELINK.REF_SCOPE_TYPE_ = 'task')
        </if>
        <if test="orQueryObject.taskName != null">
            or ${queryTablePrefix}NAME_ = #{orQueryObject.taskName}
        </if>
        <if test="orQueryObject.taskNameLike != null">
            or ${queryTablePrefix}NAME_ like #{orQueryObject.taskNameLike}${wildcardEscapeClause}
        </if>
        <if test="orQueryObject.taskNameLikeIgnoreCase != null">
            or lower(${queryTablePrefix}NAME_) like #{orQueryObject.taskNameLikeIgnoreCase}${wildcardEscapeClause}
        </if>
        <if test="orQueryObject.taskNameList != null &amp;&amp; orQueryObject.taskNameList.size() &gt; 0">
            or ${queryTablePrefix}NAME_ IN
            <foreach item="taskName" index="index" collection="orQueryObject.taskNameList"
                     open="(" separator="," close=")">
                #{taskName}
            </foreach>
        </if>
        <if test="orQueryObject.taskNameListIgnoreCase != null &amp;&amp; orQueryObject.taskNameListIgnoreCase.size() &gt; 0">
            or lower(${queryTablePrefix}NAME_) IN
            <foreach item="taskName" index="index" collection="orQueryObject.taskNameListIgnoreCase"
                     open="(" separator="," close=")">
                #{taskName}
            </foreach>
        </if>
        <if test="orQueryObject.taskParentTaskId != null">
            or ${queryTablePrefix}PARENT_TASK_ID_ = #{orQueryObject.taskParentTaskId}
        </if>
        <if test="orQueryObject.taskDescription != null">
            or ${queryTablePrefix}DESCRIPTION_ = #{orQueryObject.taskDescription}
        </if>
        <if test="orQueryObject.taskDescriptionLike != null">
            or ${queryTablePrefix}DESCRIPTION_ like #{orQueryObject.taskDescriptionLike}${wildcardEscapeClause}
        </if>
        <if test="orQueryObject.taskDescriptionLikeIgnoreCase != null">
            or lower(${queryTablePrefix}DESCRIPTION_) like #{orQueryObject.taskDescriptionLikeIgnoreCase}${wildcardEscapeClause}
        </if>
        <if test="orQueryObject.taskDeleteReason != null">
            or ${queryTablePrefix}DELETE_REASON_ = #{orQueryObject.taskDeleteReason}
        </if>
        <if test="orQueryObject.taskDeleteReasonLike != null">
            or ${queryTablePrefix}DELETE_REASON_ like #{orQueryObject.taskDeleteReasonLike}${wildcardEscapeClause}
        </if>
        <if test="orQueryObject.taskOwner != null">
            or ${queryTablePrefix}OWNER_ = #{orQueryObject.taskOwner}
        </if>
        <if test="orQueryObject.taskOwnerLike != null">
            or ${queryTablePrefix}OWNER_ like #{orQueryObject.taskOwnerLike}${wildcardEscapeClause}
        </if>
        <if test="orQueryObject.taskOwnerLikeIgnoreCase != null">
            or lower(${queryTablePrefix}OWNER_) like #{orQueryObject.taskOwnerLikeIgnoreCase}${wildcardEscapeClause}
        </if>
        <if test="orQueryObject.taskAssignee != null">
            or ${queryTablePrefix}ASSIGNEE_ = #{orQueryObject.taskAssignee}
        </if>
        <if test="orQueryObject.taskAssigneeLike != null">
            or ${queryTablePrefix}ASSIGNEE_ like #{orQueryObject.taskAssigneeLike}${wildcardEscapeClause}
        </if>
        <if test="orQueryObject.taskAssigneeLikeIgnoreCase != null">
            or ${queryTablePrefix}ASSIGNEE_ like #{orQueryObject.taskAssigneeLikeIgnoreCase}${wildcardEscapeClause}
        </if>
        <if test="orQueryObject.taskAssigneeIds != null &amp;&amp; orQueryObject.taskAssigneeIds.size() &gt; 0">
            or ${queryTablePrefix}ASSIGNEE_ IN
            <foreach item="assigneeId" index="index" collection="orQueryObject.taskAssigneeIds"
                     open="(" separator="," close=")">
                #{assigneeId}
            </foreach>
        </if>
        <if test="orQueryObject.taskPriority != null">
            or ${queryTablePrefix}PRIORITY_ = #{orQueryObject.taskPriority}
        </if>
        <if test="orQueryObject.taskMinPriority != null">
            or ${queryTablePrefix}PRIORITY_ &gt;= #{orQueryObject.taskMinPriority}
        </if>
        <if test="orQueryObject.taskMaxPriority != null">
            or ${queryTablePrefix}PRIORITY_ &lt;= #{orQueryObject.taskMaxPriority}
        </if>
        <if test="orQueryObject.unfinished">
            or ${queryTablePrefix}END_TIME_ is null
        </if>
        <if test="orQueryObject.finished">
            or ${queryTablePrefix}END_TIME_ is not null
        </if>
        <if test="orQueryObject.dueDate != null">
            or ${queryTablePrefix}DUE_DATE_ = #{orQueryObject.dueDate}
        </if>
        <if test="orQueryObject.dueBefore != null">
            or ${queryTablePrefix}DUE_DATE_ &lt; #{orQueryObject.dueBefore}
        </if>
        <if test="orQueryObject.dueAfter != null">
            or ${queryTablePrefix}DUE_DATE_ &gt; #{orQueryObject.dueAfter}
        </if>
        <if test="orQueryObject.withoutDueDate">
            or ${queryTablePrefix}DUE_DATE_ is null
        </if>
        <if test="orQueryObject.creationDate != null">
            or ${queryTablePrefix}START_TIME_ = #{orQueryObject.creationDate}
        </if>
        <if test="orQueryObject.creationBeforeDate != null">
            or ${queryTablePrefix}START_TIME_ &lt; #{orQueryObject.creationBeforeDate}
        </if>
        <if test="orQueryObject.creationAfterDate != null">
            or ${queryTablePrefix}START_TIME_ &gt; #{orQueryObject.creationAfterDate}
        </if>
        <if test="orQueryObject.completedDate != null">
            or ${queryTablePrefix}END_TIME_ = #{orQueryObject.completedDate}
        </if>
        <if test="orQueryObject.completedBeforeDate != null">
            or ${queryTablePrefix}END_TIME_ &lt; #{orQueryObject.completedBeforeDate}
        </if>
        <if test="orQueryObject.completedAfterDate != null">
            or ${queryTablePrefix}END_TIME_ &gt; #{orQueryObject.completedAfterDate}
        </if>
        <if test="orQueryObject.category != null">
            or ${queryTablePrefix}CATEGORY_ = #{orQueryObject.category}
        </if>
        <if test="orQueryObject.withFormKey">
            or ${queryTablePrefix}FORM_KEY_ IS NOT NULL
        </if>
        <if test="orQueryObject.formKey != null">
            or ${queryTablePrefix}FORM_KEY_ = #{orQueryObject.formKey}
        </if>
        <if test="orQueryObject.tenantId != null">
            or ${queryTablePrefix}TENANT_ID_ = #{orQueryObject.tenantId}
        </if>
        <if test="orQueryObject.tenantIdLike != null">
            or ${queryTablePrefix}TENANT_ID_ like #{orQueryObject.tenantIdLike}${wildcardEscapeClause}
        </if>
        <if test="orQueryObject.withoutTenantId">
            or (${queryTablePrefix}TENANT_ID_ = '' or ${queryTablePrefix}TENANT_ID_ is null)
        </if>
        <if test="orQueryObject.withoutDeleteReason">
            or (${queryTablePrefix}DELETE_REASON_ = '' or ${queryTablePrefix}DELETE_REASON_ is null)
        </if>
        <if test="orQueryObject.candidateUser != null || orQueryObject.candidateGroups != null">
            or (EXISTS(select LINK.ID_ from ${prefix}ACT_HI_IDENTITYLINK LINK where LINK.TYPE_ = 'candidate' and LINK.TASK_ID_ = ${queryTablePrefix}ID_
            and
            (
            <if test="orQueryObject.candidateUser != null">
                LINK.USER_ID_ = #{orQueryObject.candidateUser}
            </if>
            <if test="orQueryObject.candidateUser != null &amp;&amp; orQueryObject.candidateGroups != null &amp;&amp; orQueryObject.candidateGroups.size() &gt; 0">
                or
            </if>
            <if test="orQueryObject.candidateGroups != null &amp;&amp; orQueryObject.candidateGroups.size() &gt; 0">
                LINK.GROUP_ID_ IN
                <foreach item="group" index="index" collection="orQueryObject.candidateGroups"
                         open="(" separator="," close=")">
                    #{group}
                </foreach>
            </if>
            )
            )
            <if test="!orQueryObject.ignoreAssigneeValue">
                and ${queryTablePrefix}ASSIGNEE_ is null
            </if>
            )
        </if>
        <if test="orQueryObject.involvedUser != null">
            or (
            EXISTS(select LINK.ID_ from ${prefix}ACT_HI_IDENTITYLINK LINK where LINK.USER_ID_ = #{orQueryObject.involvedUser} and LINK.TASK_ID_ = ${queryTablePrefix}ID_)
            or ${queryTablePrefix}ASSIGNEE_ = #{orQueryObject.involvedUser}
            or ${queryTablePrefix}OWNER_ = #{orQueryObject.involvedUser}
            )
        </if>
        <if test="orQueryObject.involvedGroups != null">
            or
            EXISTS(select ID_ from ${prefix}ACT_HI_IDENTITYLINK LINK where LINK.TASK_ID_ = ${queryTablePrefix}ID_ and LINK.GROUP_ID_ in
            <foreach item="involvedGroup" index="index" collection="orQueryObject.involvedGroups" open="(" separator="," close=")">
                #{involvedGroup}
            </foreach>
            )
        </if>
    </sql>
</mapper>
